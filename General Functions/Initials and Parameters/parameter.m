function [p] = parameter()
%%##################################################################################################################################################################################
% input
%     

% output
%      p - parameter structure


% liquid - polar phase
                % 1- IPA - Isopropylamine
                % 2- 3MPEA - (S)-1-(3-methoxyphenyl)ethylamine 
                % 3- Ac - Acetone
                % 4- 3MAP (aq) - 3-methoxyacetophenone
                % 5- 3DPPA - 3,3-diphenylpropionic acid 
                % 6- Biocatalyst(E)
% unpolar phase
                % 7- 3MAP (nonpolare phase) - 3-methoxyacetophenone   

% solid phase - product salt   
                % 8- mu0
                % 9- mu1
                % 10- mu2
                % 11- mu3

% solid phase - donor salt  
                % 12- IPA-3DPPA - Isopropylamine 3,3-diphenylpropionic acid

%%##################################################################################################################################################################################
%% Define Model Parameters
%%##################################################################################################################################################################################
 

%% ######################################################### index positions ##############################################################################################################################

% liquid - polar phase
p.idx_IPA = 1;
p.idx_3MPEA = 2; 
p.idx_Ac = 3; 
p.idx_3MAP_aq = 4; 
p.idx_3DPPA = 5; 
p.idx_E = 6; 

% liquid - non polar phase
p.idx_3MAP_u = 7; 

% moments
p.idx_mu_p = [p.idx_3MAP_u+1:p.idx_3MAP_u+4];

% solid
p.idx_IPA_3DPPA = p.idx_mu_p(end)+1; 

% number of compounds- liquid phase
p.n_comp_l = 7;

%% ######################################################### Substance data ########################################################################################################
% ------------------------------------------------------------- Enzyme ------------------------------------------------------------------------------------------------------

p.M_E =  (103.89.*1e3)*(0.99999999965e-3)/1e3; % [DA]*molar mass constant [g/mol] = [g/mmol]

% ------------------------------------------------------------- 3MPEA ------------------------------------------------------------------------------------------------------

p.M_3MPEA = 151.21*1e-3; % [g/mmol]

% ------------------------------------------------------------- 3MAP ------------------------------------------------------------------------------------------------------

p.Cs_3MAP = 25;%25;%1.05/p.M_3MAP; % [mM] solubility

% ------------------------------------------------------------- 3DPPA ------------------------------------------------------------------------------------------------------

p.M_3DPPA = 226.27*1e-3; % [g/mmol]

% ------------------------------------------------------------- IPA-3DPPA ------------------------------------------------------------------------------------------------------

p.Cs_IPA_3DPPA = 55; %[mM] solubility

% ------------------------------------------------------------- 3MPEA-3DPPA ------------------------------------------------------------------------------------------------------

p.M_3MPEA_3DPPA = p.M_3MPEA + p.M_3DPPA; % [g/mmol]
p.Cs_3MPEA_3DPPA = 4.7; % [mM] solubility

%% ########################################################### universal constants #######################################################################################################
% Avogadro Number
p.NA = 6.02214076e23; % [1/mol]

% universal gas constant
p.R_gas = 8.314; %[J/(mol K)]

%% ########################################################### chemical reaction - constants #######################################################################################################
% taken from DOI 10.1002/btpr.1588

% ----------------------------------------------------- inhibition constants [mM]  ------------------------------------------------------------------------------------------------------

p.K_i_MPEA = 1e5;
p.K_i_IPA = 4.281;
p.K_i_Ac = 0.11;
p.K_i_MAP = 0.09;
% ------------------------------------------------------ Michaelis constant [mM]  ------------------------------------------------------------------------------------------------------

p.K_m_MPEA = 0.12;
p.K_m_IPA = 101.28;
p.K_m_Ac = 148.99;
p.K_m_MAP = 1.85;

% ---------------------------------------------------- substrate inhibition constants [mM] ------------------------------------------------------------------------------------------------------

p.K_si_MPEA = 10.38;
p.K_si_MAP = 4.15;
p.K_si_IPA = 7.2e4;
p.K_si_Ac = 1.1e4;
% ------------------------------------------------------ Equilibrium constant  ------------------------------------------------------------------------------------------------------

p.K_eq = 0.033;

%% ########################################################### crystal properties #######################################################################################################

% salt parameter for 3MPEA
p.molar_mass = p.M_3MPEA_3DPPA;
p.V_cry = 1029.43.*(1e-7)^3; % Unit cell volume [mm^3] (1 A = 1e-7 mm)
p.shape_P1 = 10; % shape factor 1 - length,width
p.shape_P2 = 1; % shape factor 2 - width, depth 
p.shape = [p.shape_P1,p.shape_P2];
p.Z_p = 2; % number of moluecules per unit cell
weight_molecule = (p.M_3MPEA_3DPPA*1e3)/p.NA; % [g/molecule]
p.density = (p.Z_p*weight_molecule)/p.V_cry; %[g/mm^3]
p.c_s = p.Cs_3MPEA_3DPPA;
p.L_max= 0.1; % [mm]
p.tau = 100;     
p.L_lb = (p.V_cry*p.shape(1)^2*p.shape(2))^(1/3);        

% shape factor
shape_fac_S = 2/p.shape(1)*(1+1/p.shape(1)+1/(p.shape(1)*p.shape(2))); % surface
shape_fac_V = 1/(p.shape(1)^2*p.shape(2)); % volume
p.shape_fac = [1 1 shape_fac_S shape_fac_V];

% Conversion
% molar amount
V_cry = @(mue3)mue3*p.shape_fac(4);
p.conv_mue3_2_n = @(mue3)((V_cry(mue3).*p.density)./(p.molar_mass));    

%% ########################################################### solver options #######################################################################################################
% ode solver
tstart = tic;
t = [];
p.opt = odeset('AbsTol',1e-16,'RelTol',1e-12,'Events', @(t,x)myevent_time(t,x,tstart));

% fmincon
p.opt_fmincon = optimoptions('fmincon','Algorithm','sqp','Display','Off');


% ------------------------------------------------------ sigmoidal function  ------------------------------------------------------------------------------------------------------

% sigmoidal function for min() and if()
p.sig = @(X)(1./(1+exp((-7e2./(X+1e-12)).*X.*sign(X))));


end